
CREATE TABLE [users] (
  [user_id] varchar(10) PRIMARY KEY,
  [user_role_id] varchar(10) NOT NULL,
  [full_name] varchar(200) NOT NULL,
  [email] varchar(150) UNIQUE NOT NULL,
  [password_hash] varchar(256) NOT NULL,
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME()),
  [updated_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [roles] (
  [user_role_id] varchar(10) PRIMARY KEY,
  [name] varchar(50) UNIQUE NOT NULL,
  [description] varchar(200),
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [patients] (
  [patient_id] varchar(10) PRIMARY KEY,
  [user_id] varchar(10) UNIQUE NOT NULL,
  [date_of_birth] date,
  [gender] varchar(20),
  [address] varchar(250)
)
GO

CREATE TABLE [professionals] (
  [professional_id] varchar(10) PRIMARY KEY,
  [user_id] varchar(10) UNIQUE NOT NULL,
  [specialty] varchar(100),
  [biography] text,
  [years_experience] int
)
GO

CREATE TABLE [moderators] (
  [moderator_id] varchar(10) PRIMARY KEY,
  [user_id] varchar(10) UNIQUE NOT NULL,
  [assigned_area] varchar(100)
)
GO

CREATE TABLE [modalities] (
  [modality_id] varchar(10) PRIMARY KEY,
  [modality_name] varchar(50) UNIQUE NOT NULL,
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [appointments] (
  [appt_id] varchar(10) PRIMARY KEY,
  [patient_id] varchar(10) NOT NULL,
  [professional_id] varchar(10) NOT NULL,
  [appt_at] datetime2 NOT NULL,
  [modality_id] varchar(10) NOT NULL,
  [session_type] varchar(20) NOT NULL,
  [location] varchar(200),
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME()),
  [updated_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [reviews] (
  [review_id] varchar(10) PRIMARY KEY,
  [patient_id] varchar(10) NOT NULL,
  [professional_id] varchar(10) NOT NULL,
  [rating] int NOT NULL,
  [comments] text,
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [projects] (
  [project_id] varchar(10) PRIMARY KEY,
  [professional_id] varchar(10) NOT NULL,
  [name] varchar(200) NOT NULL,
  [year] int NOT NULL,
  [description] text,
  [file_url] varchar(255),
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [events] (
  [event_id] varchar(10) PRIMARY KEY,
  [title] varchar(200) NOT NULL,
  [event_type] varchar(10) NOT NULL,
  [description] text,
  [start_at] datetime2 NOT NULL,
  [end_at] datetime2,
  [modality_id] varchar(10) NOT NULL,
  [creator_id] varchar(10) NOT NULL,
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME()),
  [updated_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [event_type] (
  [event_type_id] varchar(10) PRIMARY KEY,
  [event_type_name] varchar(50) UNIQUE NOT NULL,
  [event_type_description] text
)
GO

CREATE TABLE [event_attendees] (
  [reg_id] varchar(10) PRIMARY KEY,
  [event_id] varchar(10) NOT NULL,
  [user_id] varchar(10) NOT NULL,
  [attendeer_role] varchar(10) NOT NULL,
  [registered_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [event_role] (
  [event_role_id] varchar(10) PRIMARY KEY,
  [event_role_name] varchar(50) UNIQUE NOT NULL,
  [event_role_description] text
)
GO

CREATE TABLE [contacts] (
  [contact_id] varchar(10) PRIMARY KEY,
  [user_id] varchar(10) NOT NULL,
  [contact_user_id] varchar(10) NOT NULL,
  [status] varchar(20) NOT NULL,
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [rooms] (
  [room_id] varchar(10) PRIMARY KEY,
  [name] varchar(100),
  [is_group] bit NOT NULL DEFAULT (0),
  [created_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE TABLE [messages] (
  [message_id] varchar(10) PRIMARY KEY,
  [room_id] varchar(10) NOT NULL,
  [user_id] varchar(10) NOT NULL,
  [content] text NOT NULL,
  [sent_at] datetime2 NOT NULL DEFAULT (SYSUTCDATETIME())
)
GO

CREATE UNIQUE INDEX [event_attendees_index_0] ON [event_attendees] ("event_id", "user_id")
GO

CREATE UNIQUE INDEX [contacts_index_1] ON [contacts] ("user_id", "contact_user_id")
GO

CREATE INDEX [messages_index_2] ON [messages] ("room_id", "sent_at")
GO

ALTER TABLE [users] ADD FOREIGN KEY ([user_role_id]) REFERENCES [roles] ([user_role_id])
GO

ALTER TABLE [patients] ADD FOREIGN KEY ([user_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [professionals] ADD FOREIGN KEY ([user_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [moderators] ADD FOREIGN KEY ([user_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [appointments] ADD FOREIGN KEY ([patient_id]) REFERENCES [patients] ([patient_id])
GO

ALTER TABLE [appointments] ADD FOREIGN KEY ([professional_id]) REFERENCES [professionals] ([professional_id])
GO

ALTER TABLE [appointments] ADD FOREIGN KEY ([modality_id]) REFERENCES [modalities] ([modality_id])
GO

ALTER TABLE [reviews] ADD FOREIGN KEY ([patient_id]) REFERENCES [patients] ([patient_id])
GO

ALTER TABLE [reviews] ADD FOREIGN KEY ([professional_id]) REFERENCES [professionals] ([professional_id])
GO

ALTER TABLE [projects] ADD FOREIGN KEY ([professional_id]) REFERENCES [professionals] ([professional_id])
GO

ALTER TABLE [events] ADD FOREIGN KEY ([event_type]) REFERENCES [event_type] ([event_type_id])
GO

ALTER TABLE [events] ADD FOREIGN KEY ([modality_id]) REFERENCES [modalities] ([modality_id])
GO

ALTER TABLE [events] ADD FOREIGN KEY ([creator_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [event_attendees] ADD FOREIGN KEY ([event_id]) REFERENCES [events] ([event_id])
GO

ALTER TABLE [event_attendees] ADD FOREIGN KEY ([user_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [event_attendees] ADD FOREIGN KEY ([attendeer_role]) REFERENCES [event_role] ([event_role_id])
GO

ALTER TABLE [contacts] ADD FOREIGN KEY ([user_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [contacts] ADD FOREIGN KEY ([contact_user_id]) REFERENCES [users] ([user_id])
GO

ALTER TABLE [messages] ADD FOREIGN KEY ([room_id]) REFERENCES [rooms] ([room_id])
GO

ALTER TABLE [messages] ADD FOREIGN KEY ([user_id]) REFERENCES [users] ([user_id])
GO




EXEC sp_rename 'event_attendees', 'event_Attendees';
EXEC sp_rename 'event_attendees.Attendee_id', 'attendee_id', 'COLUMN';

/*
Verificacion
select event_id, attendee_id from event_attendees
*/